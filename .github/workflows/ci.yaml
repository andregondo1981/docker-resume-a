name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Build the Docker images
      - name: Build image
        run: |
          docker build --no-cache -t ${{secrets.REGISTRY_USERNAME}}/docker-resume-a:${{github.run_number}} .
          docker build --no-cache -t ${{secrets.REGISTRY_USERNAME}}/docker-resume-a .

      # Push to GitHub registry
      - name: Push image to GitHub Registry
        run: |
          docker login -u ${{secrets.REGISTRY_USERNAME}} -p ${{secrets.REGISTRY_PASS}}
          docker push ${{secrets.REGISTRY_USERNAME}}/docker-resume-a:${{github.run_number}}
          docker push ${{secrets.REGISTRY_USERNAME}}/docker-resume-a

      # Push to AWS ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          AWS_REGION: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Tag and push to ECR
        run: |
          ECR_URI=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/docker-resume-a
          docker tag ${{secrets.REGISTRY_USERNAME}}/docker-resume-a:latest $ECR_URI:latest
          docker push $ECR_URI:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: SSH to Server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            docker rm -f resume || true
            docker run -d --name resume -p 8080:5001 ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/docker-resume-a:latest
